{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Coding/NPM/Class Projects/C-85/screens/LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Google from \"expo-google-app-auth\";\nimport firebase from \"firebase\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.isUserEqual = function (googleUser, firebaseUser) {\n      if (firebaseUser) {\n        var providerData = firebaseUser.providerData;\n\n        for (var i = 0; i < providerData.length; i++) {\n          if (providerData[i].providerId === firebase.auth.GoogleAuthProvider.PROVIDER_ID && providerData[i].uid === googleUser.getBasicProfile().getId()) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    _this.onSignIn = function (googleUser) {\n      var unsubscribe = firebase.auth().onAuthStateChanged(function (firebaseUser) {\n        unsubscribe();\n\n        if (!_this.isUserEqual(googleUser, firebaseUser)) {\n          var credential = firebase.auth.GoogleAuthProvider.credential(googleUser.idToken, googleUser.accessToken);\n          firebase.auth().signInWithCredential(credential).then(function (result) {\n            if (result.additionalUserInfo.isNewUser) {\n              firebase.database().ref(\"/users/\" + result.user.uid).set({\n                gmail: result.user.email,\n                profile_picture: result.additionalUserInfo.profile.picture,\n                locale: result.additionalUserInfo.profile.locale,\n                first_name: result.additionalUserInfo.profile.given_name,\n                last_name: result.additionalUserInfo.profile.family_name,\n                current_theme: \"dark\"\n              }).then(function (snapshot) {});\n            }\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            var email = error.email;\n            var credential = error.credential;\n          });\n        } else {\n          console.log(\"User already signed-in Firebase.\");\n        }\n      });\n    };\n\n    _this.signInWithGoogleAsync = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                behaviour: \"web\",\n                androidClientId: \"831162770007-6fs0taedtfi84k3tasrus42r6l0d6rj8.apps.googleusercontent.com\",\n                iosClientId: \"831162770007-1a81mmspd7ub8bh4psqk1o1ctt5d8ur2.apps.googleusercontent.com\",\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.type === \"success\")) {\n                _context.next = 9;\n                break;\n              }\n\n              _this.onSignIn(result);\n\n              return _context.abrupt(\"return\", result.accessToken);\n\n            case 9:\n              return _context.abrupt(\"return\", {\n                cancelled: true\n              });\n\n            case 10:\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.message);\n              return _context.abrupt(\"return\", {\n                error: true\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        title: \"Sign in with Google\",\n        onPress: function onPress() {\n          return _this2.signInWithGoogleAsync();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-85/screens/LoginScreen.js"],"names":["React","Component","Google","firebase","LoginScreen","isUserEqual","googleUser","firebaseUser","providerData","i","length","providerId","auth","GoogleAuthProvider","PROVIDER_ID","uid","getBasicProfile","getId","onSignIn","unsubscribe","onAuthStateChanged","credential","idToken","accessToken","signInWithCredential","then","result","additionalUserInfo","isNewUser","database","ref","user","set","gmail","email","profile_picture","profile","picture","locale","first_name","given_name","last_name","family_name","current_theme","snapshot","catch","error","errorCode","code","errorMessage","message","console","log","signInWithGoogleAsync","logInAsync","behaviour","androidClientId","iosClientId","scopes","type","cancelled","styles","container","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, View, Button, TouchableOpacity} from \"react-native\";\nimport * as Google from \"expo-google-app-auth\";\nimport firebase from \"firebase\";\n\nexport default class LoginScreen extends Component {\n  isUserEqual = (googleUser, firebaseUser) => {\n    if (firebaseUser) {\n      var providerData = firebaseUser.providerData;\n      for (var i = 0; i < providerData.length; i++) {\n        if (\n          providerData[i].providerId ===\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID &&\n          providerData[i].uid === googleUser.getBasicProfile().getId()\n        ) {\n          // We don't need to reauth the Firebase connection.\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  onSignIn = googleUser => {\n    // We need to register an Observer on Firebase Auth to make sure auth is initialized.\n    var unsubscribe = firebase.auth().onAuthStateChanged(firebaseUser => {\n      unsubscribe();\n      // Check if we are already signed-in Firebase with the correct user.\n      if (!this.isUserEqual(googleUser, firebaseUser)) {\n        // Build Firebase credential with the Google ID token.\n        var credential = firebase.auth.GoogleAuthProvider.credential(\n          googleUser.idToken,\n          googleUser.accessToken\n        );\n\n        // Sign in with credential from the Google user.\n        firebase\n          .auth()\n          .signInWithCredential(credential)\n          .then(function(result) {\n            if (result.additionalUserInfo.isNewUser) {\n              firebase\n                .database()\n                .ref(\"/users/\" + result.user.uid)\n                .set({\n                  gmail: result.user.email,\n                  profile_picture: result.additionalUserInfo.profile.picture,\n                  locale: result.additionalUserInfo.profile.locale,\n                  first_name: result.additionalUserInfo.profile.given_name,\n                  last_name: result.additionalUserInfo.profile.family_name,\n                  current_theme: \"dark\"\n                })\n                .then(function(snapshot) {});\n            }\n          })\n          .catch(error => {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n          });\n      } else {\n        console.log(\"User already signed-in Firebase.\");\n      }\n    });\n  };\n\n  signInWithGoogleAsync = async () => {\n    try {\n      const result = await Google.logInAsync({\n        behaviour: \"web\",\n        androidClientId:\n          \"831162770007-6fs0taedtfi84k3tasrus42r6l0d6rj8.apps.googleusercontent.com\",\n        iosClientId:\n          \"831162770007-1a81mmspd7ub8bh4psqk1o1ctt5d8ur2.apps.googleusercontent.com\",\n        scopes: [\"profile\", \"email\"]\n      });\n\n      if (result.type === \"success\") {\n        this.onSignIn(result);\n        return result.accessToken;\n      } else {\n        return { cancelled: true };\n      }\n    } catch (e) {\n      console.log(e.message);\n      return { error: true };\n    }\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          title=\"Sign in with Google\"\n          onPress={() => this.signInWithGoogleAsync()}\n        ></TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}